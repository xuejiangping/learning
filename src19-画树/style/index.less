body {
  // background-color: skyblue;
}

.loading {

  @containerSize: 200px;
  @ballSize: 20px;
  @duration: 2s;
  width: @containerSize;
  height: @containerSize;

  // border: 1px solid;
  border-radius: 50%;
  position: relative;

  margin: 0 auto;



  @keyframes rotate-ball-white {
    0% {
      animation-timing-function: ease-in;
    }

    25% {
      animation-timing-function: ease-out;
      transform: translate3d(0, 100%, @ballSize);
    }

    50% {
      animation-timing-function: ease-in;
      transform: translate3d(0, 200%, 0);
    }

    75% {
      animation-timing-function: ease-out;
      transform: translate3d(0, 100%, -@ballSize);
    }

  }

  @keyframes rotate-ball-black {
    0% {
      animation-timing-function: ease-in;
    }

    25% {
      transform: translate3d(0, -100%, -@ballSize);
      animation-timing-function: ease-out;
    }

    50% {
      transform: translate3d(0, -200%, 0);
      animation-timing-function: ease-in;
    }

    75% {
      transform: translate3d(0, -100%, @ballSize);
      animation-timing-function: ease-out;
    }

  }


  .dot {
    position: absolute;
    left: (@containerSize / 2-@ballSize/2);
    top: (-@ballSize/2);
    width: @ballSize ;
    height: @ballSize;
    @randomColor: `Math.ceil(Math.random()*255)`;
    // background-color: red;
    transform-origin: center (@containerSize/2+@ballSize/2);
    perspective: 80px;
    transform-style: preserve-3d;

    &::after,
    &::before {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      // border: 1px solid red;
    }

    &::after {
      top: -100%;
      // background-color: #fff;
      animation: rotate-ball-white @duration infinite;

    }

    &::before {
      top: 100%;
      // background-color: #000;
      animation: rotate-ball-black @duration infinite;
      // background-color: #fff !important;
    }

    .loop(@n) when (@n>0) {
      .loop((@n - 1));

      &:nth-child(@{n}) {
        transform: rotate(10deg*@n);

        &::after,
        &::before {
          animation-delay: (5*@n*@duration/36);
        }

        &::after {
          background-color: rgb(@randomColor, @randomColor, @randomColor);
        }

        &::before {
          background-color: rgb(@randomColor, @randomColor, @randomColor);
        }
      }
    }

    .loop(36);






  }


}

#container {
  width: 100%;
  display: grid;
  grid-template-columns: repeat(2, 1fr);


}